 //below compares a normal method to a lambda expression
 static void Main(string[] args)
        {
            //the first int represents the argument of the method, what it will take, and the second int takes the 
            //reutrn type, what the Func will return. square will be the deligate we use to call the Lambda. the lambda
            //takes an argument named number here and is equal to number * number
            Func<int, int> square = number => number * number;
            Console.WriteLine(square(2));


            //this is calling the non-lambda method below
            Console.WriteLine(Square(5));
            Console.ReadKey();
        }
        static int Square(int number)
        {
            return number * number;
        }
    }


//below we include a variable/const variable inside of our Lambda
 const int factor = 5;
 Func<int, int> multiplier = number => number * factor;
 Console.WriteLine(multiplier(10));
 
*********verify a book in our generic list is less than 10$********************************
//here is the normal way of doing it
 static bool IsCheaperThanTenDollars(Book book)
        {
            return book.Price < 10;
        }
 
//below we use a lambda expresssion to write less code, but it does the same thing as the code above.
    var cheapBooks = books.FindAll(b => b.Price <10);
