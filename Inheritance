//we are not able to inherit from a class to the main class
//so the main class will always need to have atleast one class object initialized 

//below is our person class, note the fields, properties, and methods
public class Person
    {
        private int _age;
        private string _name;
        public Person() { }

        public int Age{get; set;}
        public string Name { get; set; }

        public void Introduce()
        {
            Console.WriteLine("This woman is: " + this.Age + " years old");
        }
        public int Height(int height)
        {
            Console.WriteLine("It appears that this woman is " + height + " inches tall!");
            return height;
        }
    }


//using inheritence, we grab all of the methods and properties from the Person class here in the Career class
//": Person" is the notation used to inherit from a class, now this class has all methods and properties from above.
class Career : Person
    {
        private string _jobtitle;
        private double _salary;

        public string JobTitle{ get; set; }
        public double Salary { get; set; }

        public void Summary()
        {
            System.Console.WriteLine("This person works as a " + JobTitle + " and makes " + Salary + " Dollars");
            
        }
        

    }
 
//we are now in the mian class. 
 class Program
    {
        static void Main(string[] args)
        {
      //below we will need to instantiate one class object, we will use career as it inherits from person
      //.Age, .Name, .Introduce, and .Height are all Person properties but are being called from a carrer class object, this is inheritence at work!
            var career = new Career();
            career.Age = 21;
            career.Name = "Kim Xion";
            career.JobTitle = "Mechanical Engineer";
            career.Salary = 180000.00;
            career.Introduce();
            career.Summary();
            Console.WriteLine(@"Before we finish up, we have one last question,
how tall are you?");
            int input = Convert.ToInt32(Console.ReadLine());

            career.Height(input);


            Console.ReadLine();
        }
    }




*************if you use a constructor and another class inherits from that class, you must do what I do below*************
 public class Vehicle
    {
  //to ensure encapsulation, we create a private field called _registartionnumber and initialize it in the consturctor 
        private string _registartionnumber;
        //create local variable to help initialize the private field above.
        public Vehicle(string registrationnumber)
        {
            Console.WriteLine(registrationnumber);
            _registartionnumber = registrationnumber;
        }

    }
 
  //this is a car so we wish to inherit from the vehicle class
    class Car: Vehicle
    {
        //to ensure encapsulation we create another local variable here string carregistration and use the base 
        //keyword to pass it to the original vehicle consturctor in Java
        public Car(string carregistration)
            : base(carregistration)
        {

        }
    }

//the data below in the main class will be sent back to the original constructor
static void Main(string[] args)
        {
            var car = new Car("xyzabyt");
            Console.ReadLine();
